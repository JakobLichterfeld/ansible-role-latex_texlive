---
# tasks file for latex_texlive
- name: Install Block
  block:
    - name: Create LaTeX TeX Live DVD download dir on remote host if it does not exist
      ansible.builtin.file:
        path: "{{ download_dir_on_remote_host }}/latex_texlive_dvd"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Download TeX Live DVD
      become: true
      become_user: "{{ ansible_user }}"
      ansible.builtin.get_url:
        url: "https://ftp.mpi-inf.mpg.de/pub/tex/mirror/ftp.dante.de/pub/tex/systems/texlive/Images/texlive{{ latex_texlive.texlive.version }}.iso"
        dest: "{{ download_dir_on_remote_host }}/latex_texlive_dvd/texlive{{ latex_texlive.texlive.version }}.iso"
        checksum: sha512:https://ftp.mpi-inf.mpg.de/pub/tex/mirror/ftp.dante.de/pub/tex/systems/texlive/Images/texlive{{ latex_texlive.texlive.version }}.iso.sha512
        timeout: 60
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      register: latex_texlive_dvd_iso

    - name: Install GUI for TeX Live Manager
      ansible.builtin.package:
        name:
          - perl-tk
        state: present

    - name: Create LaTeX TeX Live DVD mount dir on remote host if it does not exist
      ansible.builtin.file:
        path: "/mnt/texlive{{ latex_texlive.texlive.version }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Mount TeX Live DVD
      ansible.posix.mount:
        path: "/mnt/texlive{{ latex_texlive.texlive.version }}"
        src: "{{ download_dir_on_remote_host }}/latex_texlive_dvd/texlive{{ latex_texlive.texlive.version }}.iso"
        fstype: iso9660
        state: mounted
      when: latex_texlive_dvd_iso.changed

    - name: Install TeX Live DVD
      # command, as this is the only way to run perl installer scripts in Ansible.
      ansible.builtin.command:
        cmd: "perl /mnt/texlive{{ latex_texlive.texlive.version }}/install-tl --no-interaction {{ latex_texlive.texlive.install_options }}"
      changed_when: true # avoid lint error: no-changed-when
      when: latex_texlive_dvd_iso.changed

    - name: Change ownership of install directory
      ansible.builtin.file:
        path: /usr/local/texlive/{{ latex_texlive.texlive.version }}
        state: directory
        recurse: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Adjust path
      ansible.builtin.template:
        src: texlive.sh.j2
        dest: /etc/profile.d/texlive.sh
        owner: root
        group: root
        mode: '0644'
      notify: Apply changes to path directly

    - name: Flush Handlers
      ansible.builtin.meta: flush_handlers

    - name: Add remote repository
      become: true
      become_user: "{{ ansible_user }}"
      # command, as this is the only way to tlmgr in Ansible.
      ansible.builtin.command:
        cmd: "/usr/local/texlive/{{ latex_texlive.texlive.version }}/bin/{{ ansible_architecture }}-linux/tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet"
      changed_when: true # avoid lint error: no-changed-when
      when: latex_texlive_dvd_iso.changed

    - name: Prevent TeX Live packages from being installed as a dependency by the package manager
      ansible.builtin.package:
        name:
          - tex-common
          - texinfo
          - equivs
          - perl-doc
          - freeglut3
        state: present

    - name: Create LaTeX equivs download dir on remote host if it does not exist
      ansible.builtin.file:
        path: "{{ download_dir_on_remote_host }}/latex_texlive_equivs"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Download LaTeX equivs
      become: true
      become_user: "{{ ansible_user }}"
      ansible.builtin.get_url:
        url: "https://www.tug.org/texlive/files/debian-equivs-{{ latex_texlive.equivs.version }}-ex.txt"
        dest: "{{ download_dir_on_remote_host }}/latex_texlive_equivs/debian-equivs-{{ latex_texlive.equivs.version }}-ex.txt"
        timeout: 60
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      register: latex_texlive_equivs_file

    - name: Control LaTeX equivs
      # command, as this is the only way to build equivs in Ansible.
      ansible.builtin.command:
        chdir: "{{ download_dir_on_remote_host }}/latex_texlive_equivs"
        cmd: "equivs-control debian-equivs-{{ latex_texlive.equivs.version }}-ex.txt"
        creates: "{{ download_dir_on_remote_host }}/latex_texlive_equivs/texlive-local_{{ latex_texlive.equivs.version }}.99999999-1_all.deb"
      register: equivs_control
      when: latex_texlive_equivs_file.changed

    - name: Build LaTeX equivs
      # command, as this is the only way to build equivs in Ansible.
      ansible.builtin.command:
        chdir: "{{ download_dir_on_remote_host }}/latex_texlive_equivs"
        cmd: "equivs-build debian-equivs-{{ latex_texlive.equivs.version }}-ex.txt"
        creates: "{{ download_dir_on_remote_host }}/latex_texlive_equivs/texlive-local_{{ latex_texlive.equivs.version }}.99999999-1_all.deb"
      register: equivs_build
      when: latex_texlive_equivs_file.changed

    - name: Install LaTeX equivs
      ansible.builtin.apt:
        deb: "{{ download_dir_on_remote_host }}/latex_texlive_equivs/texlive-local_{{ latex_texlive.equivs.version }}.99999999-1_all.deb"
        state: present
      when: equivs_build.changed

    - name: Remove texlive doc packages
      ansible.builtin.package:
        name:
          - "texlive-*-doc"
        state: absent
      when: latex_texlive.remove_texlive_doc | bool
